// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Adv struct {
	Id                   int64    `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uniacid              int64    `protobuf:"zigzag64,2,opt,name=uniacid,proto3" json:"uniacid,omitempty"`
	Advname              string   `protobuf:"bytes,3,opt,name=advname,proto3" json:"advname,omitempty"`
	Link                 string   `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	Thumb                string   `protobuf:"bytes,5,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Displayorder         int64    `protobuf:"zigzag64,6,opt,name=displayorder,proto3" json:"displayorder,omitempty"`
	Enabled              int64    `protobuf:"zigzag64,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Shopid               int64    `protobuf:"zigzag64,8,opt,name=shopid,proto3" json:"shopid,omitempty"`
	Iswxapp              int64    `protobuf:"zigzag64,9,opt,name=iswxapp,proto3" json:"iswxapp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Adv) Reset()         { *m = Adv{} }
func (m *Adv) String() string { return proto.CompactTextString(m) }
func (*Adv) ProtoMessage()    {}
func (*Adv) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Adv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Adv.Unmarshal(m, b)
}
func (m *Adv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Adv.Marshal(b, m, deterministic)
}
func (m *Adv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Adv.Merge(m, src)
}
func (m *Adv) XXX_Size() int {
	return xxx_messageInfo_Adv.Size(m)
}
func (m *Adv) XXX_DiscardUnknown() {
	xxx_messageInfo_Adv.DiscardUnknown(m)
}

var xxx_messageInfo_Adv proto.InternalMessageInfo

func (m *Adv) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Adv) GetUniacid() int64 {
	if m != nil {
		return m.Uniacid
	}
	return 0
}

func (m *Adv) GetAdvname() string {
	if m != nil {
		return m.Advname
	}
	return ""
}

func (m *Adv) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Adv) GetThumb() string {
	if m != nil {
		return m.Thumb
	}
	return ""
}

func (m *Adv) GetDisplayorder() int64 {
	if m != nil {
		return m.Displayorder
	}
	return 0
}

func (m *Adv) GetEnabled() int64 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *Adv) GetShopid() int64 {
	if m != nil {
		return m.Shopid
	}
	return 0
}

func (m *Adv) GetIswxapp() int64 {
	if m != nil {
		return m.Iswxapp
	}
	return 0
}

type AddReply struct {
	Code                 int64    `protobuf:"zigzag64,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Status               int64    `protobuf:"zigzag64,3,opt,name=status,proto3" json:"status,omitempty"`
	Id                   int64    `protobuf:"zigzag64,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReply) Reset()         { *m = AddReply{} }
func (m *AddReply) String() string { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()    {}
func (*AddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *AddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReply.Unmarshal(m, b)
}
func (m *AddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReply.Marshal(b, m, deterministic)
}
func (m *AddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReply.Merge(m, src)
}
func (m *AddReply) XXX_Size() int {
	return xxx_messageInfo_AddReply.Size(m)
}
func (m *AddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReply proto.InternalMessageInfo

func (m *AddReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AddReply) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type EditReply struct {
	Code                 int64    `protobuf:"zigzag64,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Status               int64    `protobuf:"zigzag64,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditReply) Reset()         { *m = EditReply{} }
func (m *EditReply) String() string { return proto.CompactTextString(m) }
func (*EditReply) ProtoMessage()    {}
func (*EditReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *EditReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditReply.Unmarshal(m, b)
}
func (m *EditReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditReply.Marshal(b, m, deterministic)
}
func (m *EditReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditReply.Merge(m, src)
}
func (m *EditReply) XXX_Size() int {
	return xxx_messageInfo_EditReply.Size(m)
}
func (m *EditReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EditReply.DiscardUnknown(m)
}

var xxx_messageInfo_EditReply proto.InternalMessageInfo

func (m *EditReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *EditReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *EditReply) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type AidReq struct {
	Id                   int64    `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uniacid              int64    `protobuf:"zigzag64,2,opt,name=uniacid,proto3" json:"uniacid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AidReq) Reset()         { *m = AidReq{} }
func (m *AidReq) String() string { return proto.CompactTextString(m) }
func (*AidReq) ProtoMessage()    {}
func (*AidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *AidReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AidReq.Unmarshal(m, b)
}
func (m *AidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AidReq.Marshal(b, m, deterministic)
}
func (m *AidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AidReq.Merge(m, src)
}
func (m *AidReq) XXX_Size() int {
	return xxx_messageInfo_AidReq.Size(m)
}
func (m *AidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AidReq.DiscardUnknown(m)
}

var xxx_messageInfo_AidReq proto.InternalMessageInfo

func (m *AidReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AidReq) GetUniacid() int64 {
	if m != nil {
		return m.Uniacid
	}
	return 0
}

type DeleteReply struct {
	Code                 int64    `protobuf:"zigzag64,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Status               int64    `protobuf:"zigzag64,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

func (m *DeleteReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DeleteReply) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type QueryReq struct {
	Id                   int64    `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uniacid              int64    `protobuf:"zigzag64,2,opt,name=uniacid,proto3" json:"uniacid,omitempty"`
	Keyword              string   `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Displayorder         int64    `protobuf:"zigzag64,6,opt,name=displayorder,proto3" json:"displayorder,omitempty"`
	Enabled              int64    `protobuf:"zigzag64,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Shopid               int64    `protobuf:"zigzag64,8,opt,name=shopid,proto3" json:"shopid,omitempty"`
	Iswxapp              int64    `protobuf:"zigzag64,9,opt,name=iswxapp,proto3" json:"iswxapp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryReq) Reset()         { *m = QueryReq{} }
func (m *QueryReq) String() string { return proto.CompactTextString(m) }
func (*QueryReq) ProtoMessage()    {}
func (*QueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *QueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReq.Unmarshal(m, b)
}
func (m *QueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReq.Marshal(b, m, deterministic)
}
func (m *QueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReq.Merge(m, src)
}
func (m *QueryReq) XXX_Size() int {
	return xxx_messageInfo_QueryReq.Size(m)
}
func (m *QueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReq proto.InternalMessageInfo

func (m *QueryReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QueryReq) GetUniacid() int64 {
	if m != nil {
		return m.Uniacid
	}
	return 0
}

func (m *QueryReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *QueryReq) GetDisplayorder() int64 {
	if m != nil {
		return m.Displayorder
	}
	return 0
}

func (m *QueryReq) GetEnabled() int64 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *QueryReq) GetShopid() int64 {
	if m != nil {
		return m.Shopid
	}
	return 0
}

func (m *QueryReq) GetIswxapp() int64 {
	if m != nil {
		return m.Iswxapp
	}
	return 0
}

type AdvsReply struct {
	Code                 int64    `protobuf:"zigzag64,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List                 []*Adv   `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Total                int64    `protobuf:"zigzag64,4,opt,name=total,proto3" json:"total,omitempty"`
	Size                 int64    `protobuf:"zigzag64,5,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdvsReply) Reset()         { *m = AdvsReply{} }
func (m *AdvsReply) String() string { return proto.CompactTextString(m) }
func (*AdvsReply) ProtoMessage()    {}
func (*AdvsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *AdvsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvsReply.Unmarshal(m, b)
}
func (m *AdvsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvsReply.Marshal(b, m, deterministic)
}
func (m *AdvsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvsReply.Merge(m, src)
}
func (m *AdvsReply) XXX_Size() int {
	return xxx_messageInfo_AdvsReply.Size(m)
}
func (m *AdvsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvsReply.DiscardUnknown(m)
}

var xxx_messageInfo_AdvsReply proto.InternalMessageInfo

func (m *AdvsReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AdvsReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AdvsReply) GetList() []*Adv {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *AdvsReply) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AdvsReply) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type AdvReply struct {
	Code                 int64    `protobuf:"zigzag64,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Adv                  *Adv     `protobuf:"bytes,3,opt,name=adv,proto3" json:"adv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdvReply) Reset()         { *m = AdvReply{} }
func (m *AdvReply) String() string { return proto.CompactTextString(m) }
func (*AdvReply) ProtoMessage()    {}
func (*AdvReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *AdvReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvReply.Unmarshal(m, b)
}
func (m *AdvReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvReply.Marshal(b, m, deterministic)
}
func (m *AdvReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvReply.Merge(m, src)
}
func (m *AdvReply) XXX_Size() int {
	return xxx_messageInfo_AdvReply.Size(m)
}
func (m *AdvReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvReply.DiscardUnknown(m)
}

var xxx_messageInfo_AdvReply proto.InternalMessageInfo

func (m *AdvReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AdvReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AdvReply) GetAdv() *Adv {
	if m != nil {
		return m.Adv
	}
	return nil
}

func init() {
	proto.RegisterType((*Adv)(nil), "adv.service.Adv")
	proto.RegisterType((*AddReply)(nil), "adv.service.AddReply")
	proto.RegisterType((*EditReply)(nil), "adv.service.EditReply")
	proto.RegisterType((*AidReq)(nil), "adv.service.AidReq")
	proto.RegisterType((*DeleteReply)(nil), "adv.service.DeleteReply")
	proto.RegisterType((*QueryReq)(nil), "adv.service.QueryReq")
	proto.RegisterType((*AdvsReply)(nil), "adv.service.AdvsReply")
	proto.RegisterType((*AdvReply)(nil), "adv.service.AdvReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0xc4, 0x8d, 0x27, 0x08, 0x55, 0x0b, 0xad, 0x56, 0x3d, 0x45, 0x16, 0x87, 0x9c,
	0x2c, 0x14, 0x0e, 0xc0, 0xd1, 0x08, 0x0e, 0x88, 0x03, 0xc2, 0x70, 0x40, 0xdc, 0x36, 0x99, 0x11,
	0x5d, 0xd5, 0xb1, 0x8d, 0xd7, 0xd9, 0x12, 0x6e, 0xfc, 0x07, 0xdf, 0xc2, 0xcf, 0xf0, 0x23, 0x68,
	0xc7, 0x6b, 0xb5, 0x6e, 0x8b, 0x44, 0xa4, 0xa8, 0xb7, 0x7d, 0x6f, 0xf2, 0x32, 0x6f, 0x67, 0xde,
	0x1a, 0x62, 0x55, 0xeb, 0xb4, 0x6e, 0xaa, 0xb6, 0x12, 0x33, 0x85, 0x36, 0x35, 0xd4, 0x58, 0xbd,
	0xa6, 0xe4, 0x4f, 0x00, 0x61, 0x86, 0x56, 0x3c, 0x84, 0x91, 0x46, 0x19, 0xcc, 0x83, 0x85, 0xc8,
	0x47, 0x1a, 0x85, 0x84, 0xa3, 0x6d, 0xa9, 0xd5, 0x5a, 0xa3, 0x1c, 0x31, 0xd9, 0x43, 0x57, 0x51,
	0x68, 0x4b, 0xb5, 0x21, 0x19, 0xce, 0x83, 0x45, 0x9c, 0xf7, 0x50, 0x08, 0x18, 0x17, 0xba, 0xbc,
	0x90, 0x63, 0xa6, 0xf9, 0x2c, 0x1e, 0xc3, 0xa4, 0x3d, 0xdf, 0x6e, 0x56, 0x72, 0xc2, 0x64, 0x07,
	0x44, 0x02, 0x0f, 0x50, 0x9b, 0xba, 0x50, 0xbb, 0xaa, 0x41, 0x6a, 0x64, 0xc4, 0x2d, 0x06, 0x9c,
	0xeb, 0x43, 0xa5, 0x5a, 0x15, 0x84, 0xf2, 0xa8, 0x73, 0xe0, 0xa1, 0x38, 0x85, 0xc8, 0x9c, 0x57,
	0xb5, 0x46, 0x39, 0xe5, 0x82, 0x47, 0x4e, 0xa1, 0xcd, 0xe5, 0x77, 0x55, 0xd7, 0x32, 0xee, 0x14,
	0x1e, 0x26, 0x9f, 0x61, 0x9a, 0x21, 0xe6, 0x54, 0x17, 0x3b, 0xe7, 0x72, 0x5d, 0x21, 0xf9, 0xbb,
	0xf2, 0x59, 0x1c, 0x43, 0xb8, 0x31, 0x5f, 0xf9, 0xa6, 0x71, 0xee, 0x8e, 0xdc, 0xa3, 0x55, 0xed,
	0xd6, 0xf0, 0x25, 0x5d, 0x0f, 0x46, 0x7e, 0x4e, 0xe3, 0x7e, 0x4e, 0xc9, 0x5b, 0x88, 0xdf, 0xa0,
	0x6e, 0x0f, 0xf0, 0xd7, 0xc9, 0x12, 0xa2, 0x4c, 0x63, 0x4e, 0xdf, 0xfe, 0x7f, 0x19, 0xc9, 0x3b,
	0x98, 0xbd, 0xa6, 0x82, 0x5a, 0x3a, 0x84, 0x81, 0xdf, 0x01, 0x4c, 0x3f, 0x6c, 0xa9, 0xd9, 0xed,
	0xe5, 0xc1, 0x55, 0x2e, 0x68, 0x77, 0x59, 0x35, 0xd8, 0x07, 0xc2, 0xc3, 0x7b, 0x5f, 0xf3, 0xcf,
	0x00, 0xe2, 0x0c, 0xad, 0xd9, 0x67, 0x18, 0x4f, 0x5c, 0x68, 0x4d, 0x2b, 0xc3, 0x79, 0xb8, 0x98,
	0x2d, 0x8f, 0xd3, 0x6b, 0x8f, 0x23, 0xcd, 0xd0, 0xe6, 0x5c, 0xe5, 0x18, 0x57, 0xad, 0x2a, 0xfc,
	0xe6, 0x3b, 0xe0, 0x3a, 0x18, 0xfd, 0x83, 0x38, 0xdb, 0x22, 0xe7, 0x73, 0xf2, 0xc9, 0x45, 0xcd,
	0xee, 0xe3, 0x20, 0x81, 0x50, 0xa1, 0xe5, 0xd9, 0xdd, 0x65, 0xc0, 0x15, 0x97, 0xbf, 0x46, 0x00,
	0x19, 0xda, 0x8f, 0x1d, 0x2f, 0x52, 0xf7, 0x68, 0x51, 0xdc, 0xfa, 0xf1, 0xd9, 0xc9, 0x0d, 0xc6,
	0x67, 0xfe, 0x29, 0x8c, 0x5d, 0x4a, 0xef, 0x10, 0x9c, 0x0e, 0x98, 0xab, 0x28, 0x3f, 0x87, 0xa8,
	0x0b, 0x96, 0x78, 0x34, 0xd4, 0x70, 0x42, 0xcf, 0xe4, 0x80, 0xbc, 0x1e, 0xc1, 0x97, 0x3e, 0x43,
	0x59, 0x51, 0x88, 0xa1, 0x9b, 0x3e, 0x5a, 0x37, 0x7a, 0x5e, 0x2d, 0xec, 0x85, 0x97, 0xbe, 0x2f,
	0xe9, 0x5f, 0xd2, 0x93, 0x5b, 0xe3, 0x71, 0xca, 0x57, 0x93, 0x2f, 0xa1, 0xaa, 0xf5, 0x2a, 0xe2,
	0x0f, 0xdc, 0xb3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x27, 0x58, 0xb8, 0xed, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdvServiceClient is the client API for AdvService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdvServiceClient interface {
	Add(ctx context.Context, in *Adv, opts ...grpc.CallOption) (*AddReply, error)
	Edit(ctx context.Context, in *Adv, opts ...grpc.CallOption) (*EditReply, error)
	Delete(ctx context.Context, in *AidReq, opts ...grpc.CallOption) (*DeleteReply, error)
	QueryAll(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*AdvsReply, error)
	QueryOne(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*AdvReply, error)
}

type advServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdvServiceClient(cc *grpc.ClientConn) AdvServiceClient {
	return &advServiceClient{cc}
}

func (c *advServiceClient) Add(ctx context.Context, in *Adv, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/adv.service.AdvService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advServiceClient) Edit(ctx context.Context, in *Adv, opts ...grpc.CallOption) (*EditReply, error) {
	out := new(EditReply)
	err := c.cc.Invoke(ctx, "/adv.service.AdvService/Edit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advServiceClient) Delete(ctx context.Context, in *AidReq, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/adv.service.AdvService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advServiceClient) QueryAll(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*AdvsReply, error) {
	out := new(AdvsReply)
	err := c.cc.Invoke(ctx, "/adv.service.AdvService/QueryAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advServiceClient) QueryOne(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*AdvReply, error) {
	out := new(AdvReply)
	err := c.cc.Invoke(ctx, "/adv.service.AdvService/QueryOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvServiceServer is the server API for AdvService service.
type AdvServiceServer interface {
	Add(context.Context, *Adv) (*AddReply, error)
	Edit(context.Context, *Adv) (*EditReply, error)
	Delete(context.Context, *AidReq) (*DeleteReply, error)
	QueryAll(context.Context, *QueryReq) (*AdvsReply, error)
	QueryOne(context.Context, *QueryReq) (*AdvReply, error)
}

func RegisterAdvServiceServer(s *grpc.Server, srv AdvServiceServer) {
	s.RegisterService(&_AdvService_serviceDesc, srv)
}

func _AdvService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Adv)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adv.service.AdvService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvServiceServer).Add(ctx, req.(*Adv))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvService_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Adv)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvServiceServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adv.service.AdvService/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvServiceServer).Edit(ctx, req.(*Adv))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adv.service.AdvService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvServiceServer).Delete(ctx, req.(*AidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvService_QueryAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvServiceServer).QueryAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adv.service.AdvService/QueryAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvServiceServer).QueryAll(ctx, req.(*QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdvService_QueryOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvServiceServer).QueryOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adv.service.AdvService/QueryOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvServiceServer).QueryOne(ctx, req.(*QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdvService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adv.service.AdvService",
	HandlerType: (*AdvServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _AdvService_Add_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _AdvService_Edit_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AdvService_Delete_Handler,
		},
		{
			MethodName: "QueryAll",
			Handler:    _AdvService_QueryAll_Handler,
		},
		{
			MethodName: "QueryOne",
			Handler:    _AdvService_QueryOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
